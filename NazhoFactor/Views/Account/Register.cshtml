@model RegisterVM

@{
	ViewData["Title"] = "ثبت نام";
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-md-6">
			<div class="card">
				<div class="card-header">ثبت نام</div>
				<div class="card-body">
					<form asp-action="Register" method="post">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>
						<div class="form-floating mb-3">
							<input asp-for="PhoneOrEmail" class="form-control" id="PhoneOrEmail" placeholder="شماره تلفن یا ایمیل" required>
							<label asp-for="PhoneOrEmail"></label>
							<span asp-validation-for="PhoneOrEmail" id="phone-email-error" class="text-danger"></span>
						</div>

						<div class="form-floating mb-3">
							<input asp-for="Password" type="password" class="form-control" id="Password" placeholder="کلمه عبور" required>
							<label asp-for="Password"></label>
							<span asp-validation-for="Password" class="text-danger"></span>
						</div>

						<div class="form-floating mb-3">
							<input asp-for="ConfirmPassword" type="password" class="form-control" id="ConfirmPassword" placeholder="تکرار کلمه عبور" required>
							<label asp-for="ConfirmPassword"></label>
							<span asp-validation-for="ConfirmPassword" class="text-danger"></span>
						</div>

						<button type="submit" id="submit" class="btn btn-primary">ثبت نام</button>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			document.getElementById('phone-email-error').textContent;
			// Client-side validation for unique username
			const btn = document.getElementById('submit');
			const poe = document.getElementById('PhoneOrEmail')
			poe.addEventListener('input', checkPhoneOrEmail)

			// Client-side validation for unique phone number or email

			async function checkPhoneOrEmail() {

				var phoneOrEmail = poe.value;
				const result = await fetch('@Url.Action("CheckUniquePhoneEmail", "Account")?phoneOrEmail=' + encodeURIComponent(phoneOrEmail),)
				const data = await result.json()
				if (!data) {
					document.getElementById('phone-email-error').textContent = 'قبلا ثبت شده است.'
					btn.setAttribute('disabled', null)
				} else {
					btn.removeAttribute('disabled')
				}
			}
		});
	</script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}

